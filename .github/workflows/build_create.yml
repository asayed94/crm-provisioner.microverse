name: CI Provision (Create resources)

on: 
  pull_request_review:
    types: [submitted]
    

env:
  EMARSYS_USERNAME: ${{ secrets.EMARSYS_USERNAME }}
  EMARSYS_SECRET: ${{ secrets.EMARSYS_SECRET }}

permissions:
  contents: write
  id-token: write
  actions: read


jobs:
  set:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'

      - name: yarn install
        run: yarn install

      - id: list_changes
        run: echo "matrix=$(yarn --silent changes A ${{github.event.pull_request.head.sha}} --out json)" >> $GITHUB_OUTPUT
      
    outputs:
      matrix: ${{ steps.list_changes.outputs.matrix }}
  
  provision-slices:
    if: ${{ (github.event.review.state == 'approved') && needs.set.outputs.matrix }}
    needs: [set]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        file: ${{ fromJson(needs.set.outputs.matrix) }}
    
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'
      
      # - name: Set up AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
      #     aws-region: ${{ vars.AWS_REGION }}

      - name: yarn install
        run: yarn install

      - name: Provision new resource
        id: create_resource
        if: |
            github.event.review.state == 'approved' &&
            github.event.pull_request.base.ref == 'main'
        run: |
            response=$(yarn --silent create_resource ${{matrix.file}})
            echo "::set-output name=response::'$response'"
      
      - name: Commit new resource
        # if: |
        #   github.event.review.state == 'approved' &&
        #   github.event.pull_request.base.ref == 'main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          yarn update_resource_config ${{matrix.file}} ${{ steps.create_resource.outputs.response }}
          git add ${{matrix.file}}
          # git commit -m "[skip actions]: Update new resource configureation ${{matrix.file}}"
          # git push origin ${{ github.event.pull_request.head.ref }}
        
      
      - name: Commit new resource config
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[skip actions]: Update new resource configureation ${{matrix.file}}"
          branch: ${{ github.event.pull_request.head.ref }}
          push_options: --force
  
  build:
    runs-on: ubuntu-latest
    needs: [provision-slices]
    steps:
      - run: |
          if [ ${{ job.status }} == 'failure' ]; then
            echo "Testing failed"
            exit 1
          fi
          echo "Testing passed"
