name: CI build

on: push
  # workflow_run:
  #   workflows: ["Testing"]
  #   # branches: [main]
  #   types:
  #     - completed

permissions:
  contents: read
  id-token: write
  actions: read


jobs:
  set:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo1
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js1
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'

      - name: yarn install1
        run: yarn install

      - id: list_dirs
      # this should turn to a json
        run: echo ::set-output name=matrix::"$(yarn --silent changes A ${{github.sha}}|jq -cnR '[inputs | select(length>0)]')"

  build-slices:
    runs-on: ubuntu-latest
    needs: set
    strategy:
      matrix:
        new-resource: ["src/emarsys/contact_fields/last_lesson_at_1704730601557.json"]

    steps:
      - name: Checkout the repo2
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js2
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'

      - name: yarn install2
        run: yarn install

      - name: Provision new resource
        id: create_resource
        run: echo ::set-output name=response::$(yarn create_resource ${{matrix.new-resource}})
      
      - name: Commit new resource
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          yarn updateResourceConfig ${{matrix.new-resource}} '${{ steps.create_resource.outputs.response }}'
          git add .
          git commit -m "Add new resource"
          git push
  
  build:
    needs: [build-slices]
    runs-on: ubuntu-latest
    steps:
      - name: Job for branch status check
        run: echo Build complete
