name: CI build

on:
  workflow_run:
    workflows: ["Testing"]
    branches: [main]
    types:
      - completed

permissions:
  contents: read
  id-token: write
  actions: read

env:
  COMMIT_SHA: ${{ github.sha }}
  REPOSITORY: ${{ github.repository }}
  AWS_BUCKET: ${{ vars.AWS_BUCKET }}
  AWS_BUCKET_REGION: ${{ vars.AWS_BUCKET_REGION }}
  NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

jobs:
  install-debs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: '.node-version'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'

      - name: yarn install
        run: yarn install

  build-slices:
    runs-on: ubuntu-latest
    needs: [install-debs]
    strategy:
      matrix:
        lambda: ['crm-user-activities', 'crm-user-signintoken', 'crm-user-marketing']

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: '.node-version'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@lessonnine'

      - name: yarn install
        run: yarn install

      - name: Linting
        run: yarn lint

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Building
        if: github.ref != 'refs/heads/main'
        shell: bash
        run: yarn build

      - name: Building and Packaging artifact (merging to main)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: sh scripts/package.sh ${{matrix.lambda}}

      - name: Upload s3 (merging to main)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: aws s3 cp dist/${{matrix.lambda}}/index.zip s3://${AWS_BUCKET}/${REPOSITORY}/${{matrix.lambda}}.lambda/${COMMIT_SHA}/index.zip --region ${AWS_BUCKET_REGION} --metadata-directive REPLACE

      - name: Publish build artifact metadata (merging to main)
        if: github.ref == 'refs/heads/main'
        uses: babbel/publish-build-metadata@v1
        with:
          meta_table_arn: ${{ vars.AWS_META_TABLE_ARN }}
          slices: ${{matrix.lambda}}.lambda

  build:
    needs: [build-slices]
    runs-on: ubuntu-latest
    steps:
      - name: Job for branch status check
        run: echo Build complete
